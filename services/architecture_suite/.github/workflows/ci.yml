name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/architecture_suite
      REDIS_URL: redis://localhost:6379/0
      SECRET_KEY: testsecret
      ALGORITHM: HS256
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: architecture_suite
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:6
        ports: [6379:6379]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r services/architecture_suite/requirements.txt
      - name: Lint
        run: flake8 services/architecture_suite/app/
      - name: Test
        run: pytest --cov=services/architecture_suite/app --cov-report=xml --cov-fail-under=90
      - name: Lint
        run: flake8 services/architecture_suite/app/
      - name: Security Scan
        run: bandit -r services/architecture_suite/app/
      - name: Load Test
        run: |
          pip install locust
          locust -f services/architecture_suite/locustfile.py --headless -u 100 -r 10 -t 1m --host=http://localhost:8000 || exit 1
      - name: Trace Exporter Sanity Check
        run: |
          # Simulate OTLP collector (mock)
          echo "OTLP mock collector running"
      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v2
        with:
          coverage-summary-path: services/architecture_suite/coverage.xml
      - name: PR Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('services/architecture_suite/coverage.xml', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Test Coverage Summary\n\n\`${summary}\``
            });
